{
	"info": {
		"_postman_id": "b203e643-29c3-405e-b0ed-9435d070895e",
		"name": "POST/CON 2019",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30c27c8a-0687-4dd4-b832-ca6c459dbc29",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response body has json with request queries\", function () {",
							"    pm.response.to.have.jsonBody('args.foo1', 'bar1')",
							"        .and.have.jsonBody('args.foo2', 'bar2');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?foo1=bar1&foo2=bar2",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "foo1",
							"value": "bar1"
						},
						{
							"key": "foo2",
							"value": "bar2"
						}
					]
				}
			},
			"response": [
				{
					"name": "GET Request Woops",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get?foo1=bar1&foo2=bar2",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "foo1",
									"value": "bar1"
								},
								{
									"key": "foo2",
									"value": "bar2"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Tue, 11 Jun 2019 10:43:13 GMT"
						},
						{
							"key": "ETag",
							"value": "W/\"161-aLhNcsGArlgLSKbxPqfBW3viHPI\""
						},
						{
							"key": "Server",
							"value": "nginx"
						},
						{
							"key": "set-cookie",
							"value": "sails.sid=s%3AGz-wblZgXE8FCDq7aJpx_tUgZUcG3Nsw.LdNEN8L0C7nGWkvGLwvdw6R2s6Syjr%2FzkvyevA8qR0c; Path=/; HttpOnly"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Content-Length",
							"value": "249"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"args\": {\n        \"foo1\": \"bar1\",\n        \"foo2\": \"bar2\"\n    },\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"host\": \"postman-echo.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate\",\n        \"cache-control\": \"no-cache\",\n        \"postman-token\": \"5c27cd7d-6b16-4e5a-a0ef-191c9a3a275f\",\n        \"user-agent\": \"PostmanRuntime/7.6.1\",\n        \"x-forwarded-port\": \"443\"\n    },\n    \"url\": \"https://postman-echo.com/get?foo1=bar1&foo2=bar2\"\n}"
				}
			]
		},
		{
			"name": "POST Raw Text",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "38f8718d-6274-4ee4-ae65-e5b2adef3f2d",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response body has json with request body\", function () {",
							"    pm.response.to.have.jsonBody('data', ",
							"        'This is expected to be sent back as part of response body.');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "This is expected to be sent back as part of response body."
				},
				"url": {
					"raw": "https://postman-echo.com/post",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Form Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ec1fb06b-ab54-4852-854c-8a62290054d4",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response body has json with form data\", function () {",
							"    pm.response.to.have.jsonBody('form.foo1', 'bar1')",
							"        .and.have.jsonBody('form.foo2', 'bar2');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "foo1",
							"value": "bar1",
							"type": "text"
						},
						{
							"key": "foo2",
							"value": "bar2",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://postman-echo.com/post",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d65ad2fa-2b77-4946-a918-3396de635673",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response body has json with form data\", function () {",
							"    pm.response.to.have.jsonBody('data', ",
							"        'This is expected to be sent back as part of response body.');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "This is expected to be sent back as part of response body."
				},
				"url": {
					"raw": "https://postman-echo.com/put",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"put"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "60097b38-22f3-461c-ac97-87aaec2770c6",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response body has json with form data\", function () {",
							"    pm.response.to.have.jsonBody('data', ",
							"        'This is expected to be sent back as part of response body.');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "This is expected to be sent back as part of response body."
				},
				"url": {
					"raw": "https://postman-echo.com/patch",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"patch"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e3ea3f63-6f3f-4c45-866e-7485198e9707",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response body has json with form data\", function () {",
							"    pm.response.to.have.jsonBody('data', ",
							"        'This is expected to be sent back as part of response body.');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "This is expected to be sent back as part of response body."
				},
				"url": {
					"raw": "https://postman-echo.com/delete",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"delete"
					]
				}
			},
			"response": []
		}
	]
}